<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beibeiMajor.web.mapper.dao.WebUserDotaReportDao">

    <resultMap type="com.beibeiMajor.web.mapper.po.WebUserDotaReportPo" id="WebUserDotaReportMap">
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="nickName" column="nick_name"/>
        <result property="integral" column="integral" jdbcType="INTEGER"/>
        <result property="winRate" column="win_rate" jdbcType="NUMERIC"/>
        <result property="mvpCount" column="mvp_count" jdbcType="INTEGER"/>
        <result property="kda" column="kda" jdbcType="NUMERIC"/>
        <result property="curMaxCount" column="cur_max_count" jdbcType="INTEGER"/>
        <result property="isWin" column="iswin" jdbcType="BOOLEAN"/>
        <result property="lastPlayTime" column="last_play_time" jdbcType="TIMESTAMP"/>
        <result property="averageKills" column="average_kills" jdbcType="NUMERIC"/>
        <result property="averageDeaths" column="average_deaths" jdbcType="NUMERIC"/>
        <result property="averageAssists" column="average_assists" jdbcType="NUMERIC"/>
        <result property="goldPerMin" column="gold_per_min" jdbcType="INTEGER"/>
        <result property="xpPerMin" column="xp_per_min" jdbcType="INTEGER"/>
        <result property="rank" column="rank" jdbcType="INTEGER"/>
        <result property="totalMatchesNum" column="total_matches_num" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="WebUserDotaReportMap">
        select
          user_id, integral, win_rate, mvp_count, kda, cur_max_count, iswin, last_play_time, average_kills, average_deaths, average_assists, gold_per_min, xp_per_min
        from beibei_major.web_user_dota_report
        where user_id = #{userId}
    </select>

    <sql id="selectWebUserDotaReportVo">
        select user_id, integral, win_rate, mvp_count, kda, cur_max_count, iswin, last_play_time, average_kills, average_deaths, average_assists, gold_per_min, xp_per_min from web_user_dota_report
    </sql>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="WebUserDotaReportMap">
        select
          user_id, integral, win_rate, mvp_count, kda, cur_max_count, iswin, last_play_time, average_kills, average_deaths, average_assists, gold_per_min, xp_per_min
        from beibei_major.web_user_dota_report
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="WebUserDotaReportMap">
        select
        user_id, integral, win_rate, mvp_count, kda, cur_max_count, iswin, last_play_time, average_kills,
        average_deaths, average_assists, gold_per_min, xp_per_min
        from beibei_major.web_user_dota_report where 1=1
                and league_id = (SELECT id FROM web_league WHERE is_default = 1 LIMIT 1)
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="integral != null">
                and integral = #{integral}
            </if>
            <if test="winRate != null">
                and win_rate = #{winRate}
            </if>
            <if test="mvpCount != null">
                and mvp_count = #{mvpCount}
            </if>
            <if test="kda != null">
                and kda = #{kda}
            </if>
            <if test="curMaxCount != null">
                and cur_max_count = #{curMaxCount}
            </if>
            <if test="isWin != null">
                and iswin = #{isWin}
            </if>
            <if test="lastPlayTime != null">
                and last_play_time = #{lastPlayTime}
            </if>
            <if test="averageKills != null">
                and average_kills = #{averageKills}
            </if>
            <if test="averageDeaths != null">
                and average_deaths = #{averageDeaths}
            </if>
            <if test="averageAssists != null">
                and average_assists = #{averageAssists}
            </if>
            <if test="goldPerMin != null">
                and gold_per_min = #{goldPerMin}
            </if>
            <if test="xpPerMin != null">
                and xp_per_min = #{xpPerMin}
            </if>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userId" useGeneratedKeys="true">
        insert into beibei_major.web_user_dota_report(integral, win_rate, mvp_count, kda, cur_max_count, iswin, last_play_time, average_kills, average_deaths, average_assists, gold_per_min, xp_per_min)
        values (#{integral}, #{winRate}, #{mvpCount}, #{kda}, #{curMaxCount}, #{isWin}, #{lastPlayTime}, #{averageKills}, #{averageDeaths}, #{averageAssists}, #{goldPerMin}, #{xpPerMin})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update beibei_major.web_user_dota_report
        <set>
            <if test="integral != null">
                integral = #{integral},
            </if>
            <if test="winRate != null">
                win_rate = #{winRate},
            </if>
            <if test="mvpCount != null">
                mvp_count = #{mvpCount},
            </if>
            <if test="kda != null">
                kda = #{kda},
            </if>
            <if test="curMaxCount != null">
                cur_max_count = #{curMaxCount},
            </if>
            <if test="isWin != null">
                iswin = #{isWin},
            </if>
            <if test="lastPlayTime != null">
                last_play_time = #{lastPlayTime},
            </if>
            <if test="averageKills != null">
                average_kills = #{averageKills},
            </if>
            <if test="averageDeaths != null">
                average_deaths = #{averageDeaths},
            </if>
            <if test="averageAssists != null">
                average_assists = #{averageAssists},
            </if>
            <if test="goldPerMin != null">
                gold_per_min = #{goldPerMin},
            </if>
            <if test="xpPerMin != null">
                xp_per_min = #{xpPerMin},
            </if>
        </set>
        where user_id = #{userId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from beibei_major.web_user_dota_report where user_id = #{userId}
    </delete>

    <select id="getUserWinAndLose" resultType="com.beibeiMajor.web.mapper.po.WinAndLosePo">
        SELECT
        a.nick_name AS nickName,
        b.account_id AS accountId,
        b.win AS win,
        b.lose AS lose,
        ROUND( ( win / ( win + lose ) * 100 ), 2 ) AS winRate
        FROM
        web_user a
        LEFT JOIN (
        SELECT
        a.account_id AS account_id,
        IFNULL( a.win, 0 ) AS win,
        IFNULL( b.lose, 0 ) AS lose
        FROM
        (
        SELECT
        a.account_id,
        count( a.account_id ) AS win
        FROM
        web_match_player_info a
        LEFT JOIN web_match_detail b ON a.match_id = b.match_id
        WHERE
        ( b.radiant_win = 1 AND <![CDATA[ a.player_slot < 10 ]]> )
        OR ( b.radiant_win = 0 AND <![CDATA[ a.player_slot > 10 ]]> )
        GROUP BY
        a.account_id
        ) a
        LEFT JOIN (
        SELECT
        a.account_id,
        count( a.account_id ) AS lose
        FROM
        web_match_player_info a
        LEFT JOIN web_match_detail b ON a.match_id = b.match_id
        WHERE
        ( b.radiant_win = 1 AND <![CDATA[ a.player_slot > 10 ]]> )
        OR ( b.radiant_win = 0 AND <![CDATA[ a.player_slot < 10 ]]> )
        GROUP BY
        a.account_id
        ) b ON a.account_id = b.account_id UNION
        SELECT
        b.account_id,
        IFNULL( a.win, 0 ),
        IFNULL( b.lose, 0 )
        FROM
        (
        SELECT
        a.account_id,
        count( a.account_id ) AS win
        FROM
        web_match_player_info a
        LEFT JOIN web_match_detail b ON a.match_id = b.match_id
        WHERE
        ( b.radiant_win = 1 AND <![CDATA[ a.player_slot < 10 ]]> )
        OR ( b.radiant_win = 0 AND <![CDATA[ a.player_slot > 10 ]]> )
        GROUP BY
        a.account_id
        ) a
        RIGHT JOIN (
        SELECT
        a.account_id,
        count( a.account_id ) AS lose
        FROM
        web_match_player_info a
        LEFT JOIN web_match_detail b ON a.match_id = b.match_id
        WHERE
        ( b.radiant_win = 1 AND <![CDATA[ a.player_slot > 10 ]]> )
        OR ( b.radiant_win = 0 AND <![CDATA[ a.player_slot < 10 ]]> )
        GROUP BY
        a.account_id
        ) b ON a.account_id = b.account_id
        ) b ON a.account_id = b.account_id
    </select>

    <select id="getUserAverageData" resultType="com.beibeiMajor.web.mapper.po.UserAverageDataPo">
        SELECT
            a.account_id AS accountId,
            b.nick_name AS nickName,
            ROUND( AVG( a.gold_per_min ), 0 ) AS `gpm`,
            ROUND( AVG( a.xp_per_min ), 0 ) AS `xpm`,
            ROUND( AVG( a.kills ), 2 ) AS `kill`,
            ROUND( AVG( a.deaths ), 2 ) AS death,
            ROUND( AVG( a.assists ), 2 ) AS assist,
            ROUND( ( SUM( a.kills ) + SUM( a.assists ) ) / SUM( a.deaths ), 2 ) AS kda
        FROM
            web_match_player_info a
            LEFT JOIN web_user b ON a.account_id = b.account_id
        GROUP BY
	        a.account_id
    </select>

    <update id="batchUpdate" parameterType="java.util.List">
        update web_user_dota_report
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="integral = case" suffix="end,">
                <foreach collection="reportPoList" item="i" index="index">
                    <if test="i.integral != null">
                        when user_id = #{i.userId} then #{i.integral}
                    </if>
                </foreach>
            </trim>
            <trim prefix="win_rate = case" suffix="end,">
                <foreach collection="reportPoList" item="i" index="index">
                    <if test="i.winRate != null">
                        when user_id = #{i.userId} then #{i.winRate}
                    </if>
                </foreach>
            </trim>
            <trim prefix="mvp_count = case" suffix="end,">
                <foreach collection="reportPoList" item="i" index="index">
                    <if test="i.mvpCount != null">
                        when user_id = #{i.userId} then #{i.mvpCount}
                    </if>
                </foreach>
            </trim>
            <trim prefix="kda = case" suffix="end,">
                <foreach collection="reportPoList" item="i" index="index">
                    <if test="i.kda != null">
                        when user_id = #{i.userId} then #{i.kda}
                    </if>
                </foreach>
            </trim>
            <trim prefix="cur_max_count = case" suffix="end,">
                <foreach collection="reportPoList" item="i" index="index">
                    <if test="i.curMaxCount != null">
                        when user_id = #{i.userId} then #{i.curMaxCount}
                    </if>
                </foreach>
            </trim>
            <trim prefix="iswin = case" suffix="end,">
                <foreach collection="reportPoList" item="i" index="index">
                    <if test="i.isWin != null">
                        when user_id = #{i.userId} then #{i.isWin}
                    </if>
                </foreach>
            </trim>
            <trim prefix="last_play_time = case" suffix="end,">
                <foreach collection="reportPoList" item="i" index="index">
                    <if test="i.lastPlayTime != null">
                        when user_id = #{i.userId} then #{i.lastPlayTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="average_kills = case" suffix="end,">
                <foreach collection="reportPoList" item="i" index="index">
                    <if test="i.averageKills != null">
                        when user_id = #{i.userId} then #{i.averageKills}
                    </if>
                </foreach>
            </trim>
            <trim prefix="average_deaths = case" suffix="end,">
                <foreach collection="reportPoList" item="i" index="index">
                    <if test="i.averageDeaths != null">
                        when user_id = #{i.userId} then #{i.averageDeaths}
                    </if>
                </foreach>
            </trim>
            <trim prefix="average_assists = case" suffix="end,">
                <foreach collection="reportPoList" item="i" index="index">
                    <if test="i.averageAssists != null">
                        when user_id = #{i.userId} then #{i.averageAssists}
                    </if>
                </foreach>
            </trim>
            <trim prefix="gold_per_min = case" suffix="end,">
                <foreach collection="reportPoList" item="i" index="index">
                    <if test="i.goldPerMin != null">
                        when user_id = #{i.userId} then #{i.goldPerMin}
                    </if>
                </foreach>
            </trim>
            <trim prefix="xp_per_min = case" suffix="end,">
                <foreach collection="reportPoList" item="i" index="index">
                    <if test="i.xpPerMin != null">
                        when user_id = #{i.userId} then #{i.xpPerMin}
                    </if>
                </foreach>
            </trim>
            <trim prefix="total_matches_num = case" suffix="end,">
                <foreach collection="reportPoList" item="i" index="index">
                    <if test="i.totalMatchesNum != null">
                        when user_id = #{i.userId} then #{i.totalMatchesNum}
                    </if>
                </foreach>
            </trim>
        </trim>
        where user_id in

        <foreach collection="reportPoList" item="i" open="(" separator="," close=")">
            #{i.userId}
        </foreach>

        and league_id = (SELECT id FROM web_league WHERE is_default = 1 LIMIT 1)
    </update>
    <select id="selectWebUserDotaReportList" parameterType="com.beibeiMajor.system.domain.WebUserDotaReport" resultMap="WebUserDotaReportMap">
        select user_id, integral, win_rate, mvp_count, kda, cur_max_count, iswin, last_play_time, average_kills, average_deaths, average_assists, gold_per_min, xp_per_min ,
        (select nick_name from web_user where account_id = w.user_id) as nick_name,
        (SELECT COUNT(integral) FROM `web_user_dota_report` AS b WHERE w.integral &lt; b.integral) +1 AS "rank"
        from web_user_dota_report w
        <where>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="integral != null "> and integral = #{integral}</if>
            <if test="winRate != null "> and win_rate = #{winRate}</if>
            <if test="mvpCount != null "> and mvp_count = #{mvpCount}</if>
            <if test="kda != null "> and kda = #{kda}</if>
            <if test="curMaxCount != null "> and cur_max_count = #{curMaxCount}</if>
            <if test="isWin != null "> and iswin = #{isWin}</if>
            <if test="lastPlayTime != null "> and last_play_time = #{lastPlayTime}</if>
            <if test="averageKills != null "> and average_kills = #{averageKills}</if>
            <if test="averageDeaths != null "> and average_deaths = #{averageDeaths}</if>
            <if test="averageAssists != null "> and average_assists = #{averageAssists}</if>
            <if test="goldPerMin != null "> and gold_per_min = #{goldPerMin}</if>
            <if test="xpPerMin != null "> and xp_per_min = #{xpPerMin}</if>
            <if test="leagueId != null "> and league_id = #{leagueId}</if>
        </where>
        order by integral desc
    </select>

    <insert id="batchInsert" parameterType="java.util.List">
        insert IGNORE into web_user_dota_report(user_id, league_id,integral, win_rate, mvp_count, kda, cur_max_count, iswin, last_play_time, average_kills, average_deaths, average_assists, gold_per_min, xp_per_min)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.userId} ,(SELECT id FROM web_league WHERE is_default = 1 LIMIT 1),#{item.integral} ,#{item.winRate}, #{item.mvpCount}, #{item.kda}, #{item.curMaxCount}, #{item.isWin}, #{item.lastPlayTime}, #{item.averageKills}, #{item.averageDeaths}, #{item.averageAssists}, #{item.goldPerMin}, #{item.xpPerMin})
        </foreach>
    </insert>

    <select id="getHighestPointsTop" resultType="java.lang.String">
        SELECT
            concat(b.nick_name, '(',a.integral,')')

        FROM
            web_user_dota_report a
            LEFT JOIN web_user b ON a.user_id = b.account_id
        WHERE
	        a.total_matches_num > 10
        ORDER BY
            a.integral DESC
            LIMIT #{topLimit}
    </select>

    <select id="getHighestWinPerTop" resultType="java.lang.String">
        SELECT
        concat(b.nick_name, '(',a.win_rate,')')
        FROM
            web_user_dota_report a
            LEFT JOIN web_user b ON a.user_id = b.account_id
        WHERE
	        a.total_matches_num > 5
            and a.league_id = #{leagueId}
        ORDER BY
            a.win_rate ${desc},
            a.integral ${desc}
            LIMIT #{topLimit}
    </select>

    <select id="getHighestKDATop" resultType="java.lang.String">
        SELECT
          concat(b.nick_name, '(',a.kda,')')
        FROM
            web_user_dota_report a
            LEFT JOIN web_user b ON a.user_id = b.account_id
        WHERE
	        a.total_matches_num > 5
            and a.league_id = #{leagueId}
        ORDER BY
            a.kda ${desc},
            a.integral ${desc}
            LIMIT #{topLimit}
    </select>

    <select id="getLongestWinningStreakTop" resultType="java.lang.String">
        SELECT
              concat(b.nick_name, '(',a.cur_max_count,')')
        FROM
            web_user_dota_report a
            LEFT JOIN web_user b ON a.user_id = b.account_id
        WHERE
            a.total_matches_num > 10
            AND a.iswin = 0
        ORDER BY
            a.cur_max_count ${desc},
            a.integral ${desc}
            LIMIT #{topLimit}
    </select>

    <select id="getHighestKillsPerGameTop" resultType="java.lang.String">
        SELECT
         concat(b.nick_name, '(',a.average_kills,')')
        FROM
            web_user_dota_report a
            LEFT JOIN web_user b ON a.user_id = b.account_id
        WHERE
            a.total_matches_num > 5
        and a.league_id = #{leagueId}
        ORDER BY
            a.average_kills ${desc},
            a.integral ${desc}
            LIMIT #{topLimit}
    </select>

    <select id="getLeastDeathPerGameTop" resultType="java.lang.String">
        SELECT
        concat(b.nick_name, '(',a.average_deaths,')')
        FROM
            web_user_dota_report a
            LEFT JOIN web_user b ON a.user_id = b.account_id
        WHERE
            a.total_matches_num > 5
        and a.league_id = #{leagueId}
        ORDER BY
            a.average_deaths ${desc},
            a.integral ${desc}
            LIMIT #{topLimit}
    </select>

    <select id="getHighestAssistsPerGameTop" resultType="java.lang.String">
        SELECT
          concat(b.nick_name, '(',a.average_assists,')')
        FROM
            web_user_dota_report a
            LEFT JOIN web_user b ON a.user_id = b.account_id
        WHERE
            a.total_matches_num > 5
        and a.league_id = #{leagueId}
        ORDER BY
            a.average_assists ${desc},
            a.integral ${desc}
            LIMIT #{topLimit}
    </select>
    <select id="getYesTodayTopUser" resultType="com.beibeiMajor.system.domain.WebUser">
        SELECT wp.`account_id` as "accountId",
        w.`nick_name` as "nickName",
        (SUM(kills)*1000-SUM(deaths)*500+SUM(assists)*2000+SUM(scaled_hero_damage)+SUM(scaled_hero_healing))/COUNT(id) AS integral
        FROM `web_match_detail` AS wb
        LEFT JOIN `web_match_player_info` wp ON wp.`match_id` = wb.`match_id`
        LEFT JOIN `web_user` w ON w.`account_id` = wp.`account_id`
         WHERE wb.start_time >=#{startDate}
         and #{endDate}> wb.start_time
         GROUP BY wp.`account_id`
         ORDER BY integral DESC
    </select>
    <select id="getMyRecordList" resultType="com.beibeiMajor.web.service.dto.MyMatchDetailBean">
        SELECT wh.`zh_name` AS "heroName", wh.hero_id as "heroId",wh.icon as "heroIcon",
        CASE
        WHEN ( radiant_win = 0 AND <![CDATA[ player_slot < 10 ]]> )
        OR ( radiant_win = 1 AND <![CDATA[ player_slot > 10 ]]> ) THEN
        0 ELSE 1
        END  AS "result",
        IF((FIND_IN_SET(#{accountId},wd.double_account) >0 AND wd.`settlement_status` =1),'1','0') AS "isDouble",
        FROM_UNIXTIME(wd.`start_time`) AS "playDate",
        CONCAT(wb.`before_integral`,IF(wb.`after_integral` > wb.`before_integral`,'+',''),(wb.`after_integral`-wb.`before_integral`)) AS "integral",
        CONCAT(wb.`kills`,'/',wb.`deaths`,'/',wb.`assists`) AS "kda",
        wb.last_hits AS "lastHits",
        wb.denies AS "denies",
        wb.gold_per_min AS "goldPerMin",
        wb.xp_per_min AS "xpPerMin"
        FROM `web_match_player_info` wb
        LEFT JOIN `web_match_detail` wd ON wd.`match_id` = wb.`match_id`
        LEFT JOIN `web_dota_hero` wh ON wh.`hero_id` = wb.`hero_id`
        WHERE wb.`account_id` = #{accountId} and wd.league_id = #{leagueId}
        ORDER BY wd.`start_time` DESC
    </select>
    <select id="getWarRateTop" resultType="java.lang.String">
        SELECT
        CONCAT(b.nick_name, '(',ROUND( b.warRate*100,2),')')
        FROM
        ( SELECT
        b.nick_name,COUNT(c.match_id) AS cnt,
        ROUND( ( SUM( a.kills ) + SUM( a.assists ) ) / SUM(IF(10 > player_slot
        , radiant_score,dire_score)), 4 ) AS warRate

        FROM
        web_match_player_info a
        LEFT JOIN web_user b ON a.account_id = b.account_id
        LEFT JOIN `web_match_detail` c ON c.match_id = a.match_id
        WHERE  c.league_id = #{leagueId}
        GROUP BY
        a.account_id
        ) AS b
        WHERE b.cnt > 5
        ORDER BY b.warRate ${desc}
        LIMIT #{topLimit}
    </select>

    <select id="getHeroCountTop" resultType="java.lang.String">
        SELECT
         CONCAT(wd.zh_name, '(',COUNT(wm.hero_id),')')
        FROM `web_match_player_info` wm
        JOIN `web_dota_hero` wd ON wd.hero_id = wm.hero_id
        JOIN `web_match_detail` c ON c.match_id = wm.match_id
        WHERE  c.league_id = #{leagueId}
        GROUP BY wm.hero_id
        ORDER BY COUNT(wm.hero_id)  ${desc}
        LIMIT #{topLimit}
    </select>
    <select id="getheroWinRateTop" resultType="java.lang.String">

        SELECT

        CONCAT(zh_name, '(',win,'/',con,')') AS rsc

        FROM (

        SELECT
        wd.`zh_name`,COUNT(wm.hero_id) AS con,

        (SELECT

        SUM(CASE
        WHEN ( radiant_win = 0 AND   10 >player_slot  )
        OR ( radiant_win = 1 AND player_slot > 10  ) THEN
        0 ELSE 1
        END  ) AS win
        FROM `web_match_player_info` wb
        LEFT JOIN `web_match_detail` wd ON wd.`match_id` = wb.`match_id`
        WHERE wb.hero_id = wm.hero_id) AS win

        FROM `web_match_player_info` wm
        JOIN `web_dota_hero` wd ON wd.hero_id = wm.hero_id
        JOIN `web_match_detail` c ON c.`match_id` = wm.`match_id`
        WHERE 1=1
        and c.league_id = #{leagueId}
        GROUP BY wm.hero_id
        ) r
        WHERE r.con > 5

        ORDER BY ROUND(win/con*100,2) ${desc},con ${desc}
        LIMIT #{topLimit}
    </select>
    <select id="heroRateTop" resultType="java.lang.String">
      SELECT
         CONCAT(nick_name, '(',heroId,'/',con,')') AS rsc
        FROM (

        SELECT nick_name,
        (SELECT COUNT(*) FROM `web_match_player_info` a JOIN `web_match_detail` b ON b.match_id = a.match_id WHERE account_id = w.`account_id` and b.league_id = #{leagueId}) AS con,
        (SELECT COUNT(DISTINCT hero_id) FROM `web_match_player_info` a JOIN `web_match_detail` b ON b.match_id = a.match_id  WHERE account_id = w.`account_id` and b.league_id = #{leagueId}) AS heroId
        FROM `web_user` w
        ) r
        WHERE r.con > 5

        ORDER BY ROUND(heroId/con*100,2) ${desc},con ${desc}
        LIMIT #{topLimit}
    </select>

    <select id="getMyWarRate" resultType="com.beibeiMajor.system.domain.RecentPerform">

        SELECT   "100.00" as "max","参战能力" as "text",    ROUND( ( SUM( A.kills ) + SUM( A.assists ) ) / SUM(IF(10 > player_slot
                , radiant_score,dire_score))*100, 2 ) AS "value" FROM `web_match_player_info`  A
        JOIN `web_match_detail` B ON A.`match_id` = B.`match_id`
        WHERE A.`account_id` = #{accountId} AND B.`league_id` = #{leagueId}
        ORDER BY B.`start_time` DESC LIMIT 5


    </select>

    <select id="getMyKad" resultType="com.beibeiMajor.system.domain.RecentPerform">
        SELECT   "100.00" as "max","补刀能力" as "text", ROUND( (SUM(last_hits)+SUM(denies))/18,2) AS "value"
        FROM `web_match_player_info` WHERE match_id IN (
        SELECT match_id FROM (
        SELECT A.match_id
        FROM `web_match_player_info`  A
        JOIN `web_match_detail` B ON A.`match_id` = B.`match_id`
        WHERE A.`account_id` = #{accountId} AND B.`league_id` = #{leagueId}
        ORDER BY B.`start_time` DESC LIMIT 5) r)
        AND account_id = #{accountId}
    </select>

    <select id="getMyGold" resultType="com.beibeiMajor.system.domain.RecentPerform">
        SELECT  "100.00" as "max","打钱能力" as "text", ROUND( (SUM(gold)+SUM(gold_spent))/1500,2) AS "value"
        FROM `web_match_player_info` WHERE match_id IN (
        SELECT match_id FROM (
        SELECT A.match_id
        FROM `web_match_player_info`  A
        JOIN `web_match_detail` B ON A.`match_id` = B.`match_id`
        WHERE A.`account_id` = #{accountId}  AND B.`league_id` = #{leagueId}
        ORDER BY B.`start_time` DESC LIMIT 5) r)
        AND account_id = #{accountId}
    </select>

    <select id="getMyDamage" resultType="com.beibeiMajor.system.domain.RecentPerform">
        SELECT  "100.00" as "max","输出能力" as "text", ROUND( (SUM(hero_damage))/3000,2) AS "value"
        FROM `web_match_player_info` WHERE match_id IN (
        SELECT match_id FROM (
        SELECT A.match_id
        FROM `web_match_player_info`  A
        JOIN `web_match_detail` B ON A.`match_id` = B.`match_id`
        WHERE A.`account_id` = #{accountId} AND B.`league_id` = #{leagueId}
        ORDER BY B.`start_time` DESC LIMIT 5) r)
        AND account_id = #{accountId}
    </select>

    <select id="getMyTower" resultType="com.beibeiMajor.system.domain.RecentPerform">

        SELECT  "100.00" as "max","推塔能力" as "text", ROUND( (SUM(tower_damage))/800,2) AS "value"
        FROM `web_match_player_info` WHERE match_id IN (
        SELECT match_id FROM (
        SELECT A.match_id
        FROM `web_match_player_info`  A
        JOIN `web_match_detail` B ON A.`match_id` = B.`match_id`
        WHERE A.`account_id` = #{accountId} AND B.`league_id` = #{leagueId}
        ORDER BY B.`start_time` DESC LIMIT 5) r)
        AND account_id = #{accountId}
    </select>

</mapper>